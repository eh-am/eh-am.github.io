@import 'variables';

// https://codepen.io/niklass/pen/MXzJBQ
[data-emoji] {
  font-style: normal;
  font-weight: normal !important;
  // try to normalize emoji
  font-family: apple color emoji, segoe ui emoji, noto color emoji,
    android emoji, emojisymbols, emojione mozilla, twemoji mozilla,
    segoe ui symbol !important;
}
[data-emoji]:before {
  content: attr(data-emoji);
  margin-right: 0.125em;
}

// Since we changed date to use a short format
// We end up using less space than necessary
.list ul li .date {
  width: initial;
  text-align: initial;
}

// reimplement without using font-awesome
@media only screen and (max-width: 768px) {
  .navigation .menu-button {
    display: flex;
    height: 6rem;
  }
}

.menu-button .wrap {
  width: 2.5rem;
  height: 2.4rem;

  justify-content: space-between;
  display: flex;
  flex-direction: column;
  align-self: center;
}
.menu-button .stripe {
  display: inline-block;
  height: 0.4rem;
  background-color: $fg-color;
  border-radius: 3px;
}

// a bug with "code's" shortcode
// makes it display an additional empty p tag
code + p {
  display: none;
}


// page transitions
#page-transitioner.start {
	position: fixed;
	bottom: 0;
	left: 0;
	transform: translate(-50%, 50%);
	border-radius: 100%;
	animation: fade-in 1s;
	z-index: 9999;
	background-color: black;
}


@media (orientation: landscape) {
	#page-transitioner.start {
		width: 10%;
		display: inline-block;
		padding-bottom: 10%;

		width: 1vw;
		height: 1vw;
	}
	@keyframes fade-in {
		100% {
			// 100vw -> screen height
			// 200vw -> since we are translating half of the circle to outside the screen
			// 20vw to compensate for the corners
			height: calc(200vw + 20vw);
			width: calc(200vw + 20vw);
		}
	}
}

@media (orientation: portrait) {
	#page-transitioner.start {
		padding-bottom: initial;
		height: 1vh;
		width: 1vh;
	}

	@keyframes fade-in {
		100% {
			// 100vh -> screen height
			// 200vh -> since we are translating half of the circle to outside the screen
			// 20vh to compensate for the corners
			height: calc(200vh + 20vh);
			width: calc(200vh + 20vh);
		}
	}
}
